<!DOCTYPE html>
<html lang="zh">

<head>
  <meta charset="utf-8" />
  <!-- <link rel="shortcut icon" href="https://assets.aquanliang.com/quan-msg-favicon.ico" /> -->
  <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0"
    viewport-fit="cover" />
  <meta name="theme-color" content="#000000" />
  <meta name="keywords" content="企业微信营销,企业微信官方服务商,企业微信会话存档,微信聊天记录保存,私有化部署,私域流量,私域流量运营,微信营销软件,移动办公" />
  <meta name="description" content="高效聚合聊天工作台，帮助企业提高服务质量&效率。" />
  <!-- <link rel="apple-touch-icon" href="logo.png" /> -->
  <link rel="icon" href="xxx" />
  <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
  <!-- <link rel="manifest" href="/app/quan-msgv2/manifest.json" /> -->
  <!--
      Notice the use of /app/quan-msgv2 in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "/app/quan-msgv2/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
  <title>客服工作台</title>
  <script src="//pkg.aquanliang.com/bundle-assets/polyfill.quan.bundle.min.js"></script>
  <script src="//pkg.aquanliang.com/npm/react@16.13.1/umd/react.production.min.js"></script>
  <script src="//pkg.aquanliang.com/npm/react-dom@16.13.1/umd/react-dom.production.min.js"></script>
<script defer src="/app/quan-msgv2/static/js/bundle.js"></script></head>

<body ontouchstart="" onmouseover="">
  <noscript>You need to enable JavaScript to run this app.</noscript>
  <div id="root"></div>
  <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
</body>

</html>